{"cells":[{"cell_type":"code","source":["!pip install scikit-fuzzy\n","\n","import numpy as np\n","import pandas as pd\n","import skfuzzy as fuzz  # Corrected import to use scikit-fuzzy\n","\n","# Step 1: Load the dataset from CSV\n","def load_data(file_path):\n","    # Load the CSV file\n","    df = pd.read_csv(file_path)\n","    return df\n","\n","# Step 2: Define the fuzzy comparison matrix\n","# Example of a fuzzy comparison matrix for 5 attributes, based on expert input\n","# This needs to be updated with the correct pairwise comparison data.\n","criteria = [\"LIMIT_BAL\", \"SEX\", \"EDUCATION\", \"MARRIAGE\", \"AGE\"]\n","\n","# Fuzzy comparison values are triangular numbers (a, b, c) for the comparisons\n","# You should populate this matrix based on expert evaluations or your own decision criteria.\n","comparison_matrix = np.array([\n","    [(1, 1, 1), (1/3, 1/2, 1), (1/5, 1/3, 1/2), (1, 1, 2), (1/3, 1/2, 1)], # LIMIT_BAL\n","    [(2, 3, 5), (1, 1, 1), (1/3, 1/2, 1), (1, 1, 2), (1/2, 2/3, 1)],     # SEX\n","    [(2, 3, 5), (1, 2, 3), (1, 1, 1), (1, 2, 3), (1/2, 1, 2)],            # EDUCATION\n","    [(0.5, 0.5, 1), (0.5, 0.5, 1), (1/3, 1/2, 1), (1, 1, 1), (1/2, 1, 2)], # MARRIAGE\n","    [(1, 2, 3), (1, 1.5, 2), (0.5, 1, 2), (0.5, 1, 2), (1, 1, 1)]          # AGE\n","])\n","\n","# Step 3: Initialize the fuzzy decision matrix\n","fuzzy_decision_matrix = np.zeros((len(criteria), len(criteria), 3))\n","\n","# Convert the triangular numbers into fuzzy format (Linguistic terms for triangular fuzzy numbers)\n","for i in range(len(criteria)):\n","    for j in range(len(criteria)):\n","        a, b, c = comparison_matrix[i][j]\n","        fuzzy_decision_matrix[i, j] = [a, b, c]  # Represent as triangular fuzzy numbers [a, b, c]\n","\n","# Step 4: Fuzzy pairwise comparison and aggregation\n","# Aggregate the fuzzy values to get the fuzzy weights (synthetic extent)\n","def fuzzy_aggregate(fuzzy_matrix):\n","    # Initialize the sum for each column (component a, b, c)\n","    fuzzy_sum = np.zeros((fuzzy_matrix.shape[1], 3))  # shape (5, 3) for a, b, c components\n","\n","    for row in fuzzy_matrix:\n","        fuzzy_sum += row\n","\n","    return fuzzy_sum\n","\n","# Step 5: Defuzzification to crisp values using center of gravity (centroid method)\n","def defuzzify(fuzzy_values):\n","    defuzzified_values = []\n","    for fuzzy in fuzzy_values:\n","        # Center of gravity method for defuzzification (the average of the triangular fuzzy numbers)\n","        centroid = (fuzzy[0] + 4*fuzzy[1] + fuzzy[2]) / 6\n","        defuzzified_values.append(centroid)\n","    return defuzzified_values\n","\n","# Aggregate the fuzzy comparison matrix\n","aggregated_fuzzy_values = fuzzy_aggregate(fuzzy_decision_matrix)\n","\n","# Defuzzify the aggregated fuzzy values to get the final crisp values (weights)\n","crisp_values = defuzzify(aggregated_fuzzy_values)\n","\n","# Output the crisp values as the final weights\n","weights = pd.DataFrame(crisp_values, index=criteria, columns=[\"Weight\"])\n","print(\"FAHP Weights Based on Pairwise Comparison Matrix:\")\n","print(weights)\n","\n","# Step 6: Example - Use CSV data for further analysis or decision-making\n","# You can use the loaded data (df) here for further analysis or decision-making tasks\n","# Example: Print first 5 rows of your data\n","df = load_data('/content/drive/MyDrive/BAHAN FUZZY/UCI_Credit_Card.csv')\n","print(\"\\nFirst 5 Rows of Your CSV Data:\")\n","print(df.head())"],"metadata":{"id":"5Q6m6KhSLuhS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731512861545,"user_tz":-420,"elapsed":5415,"user":{"displayName":"Rio Eko Saputro","userId":"04875484780913341707"}},"outputId":"6d7ace83-1e5e-4a97-e2c9-cbf506a7aa41"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-fuzzy in /usr/local/lib/python3.10/dist-packages (0.5.0)\n","FAHP Weights Based on Pairwise Comparison Matrix:\n","             Weight\n","LIMIT_BAL  9.916667\n","SEX        5.638889\n","EDUCATION  3.533333\n","MARRIAGE   6.416667\n","AGE        4.416667\n","\n","First 5 Rows of Your CSV Data:\n","   ID  LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_0  PAY_2  PAY_3  PAY_4  \\\n","0   1    20000.0    2          2         1   24      2      2     -1     -1   \n","1   2   120000.0    2          2         2   26     -1      2      0      0   \n","2   3    90000.0    2          2         2   34      0      0      0      0   \n","3   4    50000.0    2          2         1   37      0      0      0      0   \n","4   5    50000.0    1          2         1   57     -1      0     -1      0   \n","\n","   ...  BILL_AMT4  BILL_AMT5  BILL_AMT6  PAY_AMT1  PAY_AMT2  PAY_AMT3  \\\n","0  ...        0.0        0.0        0.0       0.0     689.0       0.0   \n","1  ...     3272.0     3455.0     3261.0       0.0    1000.0    1000.0   \n","2  ...    14331.0    14948.0    15549.0    1518.0    1500.0    1000.0   \n","3  ...    28314.0    28959.0    29547.0    2000.0    2019.0    1200.0   \n","4  ...    20940.0    19146.0    19131.0    2000.0   36681.0   10000.0   \n","\n","   PAY_AMT4  PAY_AMT5  PAY_AMT6  default.payment.next.month  \n","0       0.0       0.0       0.0                           1  \n","1    1000.0       0.0    2000.0                           1  \n","2    1000.0    1000.0    5000.0                           0  \n","3    1100.0    1069.0    1000.0                           0  \n","4    9000.0     689.0     679.0                           0  \n","\n","[5 rows x 25 columns]\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"kbR6RjiEL3np","executionInfo":{"status":"ok","timestamp":1731512693987,"user_tz":-420,"elapsed":26376,"user":{"displayName":"Rio Eko Saputro","userId":"04875484780913341707"}},"outputId":"5df90c86-6feb-4862-c0a1-c827d0001c09","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1731512614986}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}